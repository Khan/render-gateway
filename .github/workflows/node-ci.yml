name: Node CI

on:
  pull_request:
    # edited is needed because that's the trigger when the base branch is changed on a PR
    # The rest are the defaults.
    types: [edited, opened, synchronize, reopened]

  push:
    branches:
    - master
    - feature/*

jobs:
  lint:
    name: Lint and flow check
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [10.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: yarn install
    - name: Lint
      run: yarn lint
    - name: Flow
      run: yarn flow:ci


  test:
    needs: [lint]
    name: Test
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        node-version: [10.x, 12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: yarn install
    - name: Run tests
      run: yarn test


  # This workflow will build distributable artifacts and commit them to the
  # branch that is being used for the PR. This should work even on protected
  # branches because of our use of an SSH deploy key that is setup against
  # the repo.
  publish_to_branch:
    name: Publish to branch
    env:
      CI: true
    runs-on: ubuntu-latest
    steps:
    - uses: webfactory/ssh-agent@v0.2.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    - name: Checkout via SSH
      run: |
        git clone git@github.com:Khan/render-gateway.git .
        git checkout ${{ github.head_ref }}
    - name: Use Node.js 12
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install dependencies
      run: yarn install
    - name: Run tests
      run: yarn test
    - name: Build the distributable artifacts
      run: yarn build
    - name: Detect changes
      run: HAS_CHANGES=$(git status --porcelain | wc -l)
    - name: Commit changes
      if: env.HAS_CHANGES > 0
      run: |
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
        git config user.name "$GITHUB_ACTOR"
        git add .
        git commit -m "Updating branch with build artifacts (Run=${{ github.run_id }})"
        git push
