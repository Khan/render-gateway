{"version":3,"file":"format-error.js","names":["formatError","errorFormat","errorMetadata","formattedMetadata","JSON","stringify","undefined","replace"],"sources":["../../src/gateway/format-error.js"],"sourcesContent":["// @flow\n\n/**\n * Format error metadata into a given error format string.\n *\n * @param {?string} errorFormat The format string.\n *  - If this is null, just the formatted errorMetadata will be returned.\n *  - If `{error}` is in the string, it's first occurrence will be replaced\n *    with the errorMetadata formatted with 4 space indentation.\n *  - If the `{error}` substitution is absent, the metadata will be omitted.\n * @param {any} errorMetadata The metadata that represents the error being\n * formatted.\n * @returns {string} The formatted error.\n */\nexport const formatError = (\n    errorFormat: ?string,\n    errorMetadata: any,\n): string => {\n    const formattedMetadata = JSON.stringify(errorMetadata, undefined, 4);\n    if (errorFormat == null) {\n        return formattedMetadata;\n    }\n    return errorFormat.replace(\"{error}\", formattedMetadata);\n};\n"],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,WAAW,GAAG,CACvBC,WAAoB,EACpBC,aAAkB,KACT;EACT,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,SAAS,CAACH,aAAa,EAAEI,SAAS,EAAE,CAAC,CAAC;EACrE,IAAIL,WAAW,IAAI,IAAI,EAAE;IACrB,OAAOE,iBAAiB;EAC5B;EACA,OAAOF,WAAW,CAACM,OAAO,CAAC,SAAS,EAAEJ,iBAAiB,CAAC;AAC5D,CAAC;AAAC"}