{"version":3,"sources":["../../src/gateway/run-server.js"],"names":["runServer","options","authentication","renderFn","remainingOptions","version","app","use","get","gatewayOptions","mode","logger"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAGA;;AAKA;;AACA;;;;;;;;;;;;;;AAEA;;;;;;;AAOO,MAAMA,SAAS,GAAG,MACrBC,OADqB,IAEL;AAChB,QAAM;AAACC,IAAAA,cAAD;AAAiBC,IAAAA;AAAjB,MAAkDF,OAAxD;AAAA,QAAoCG,gBAApC,4BAAwDH,OAAxD;;AACA,QAAM;AAACI,IAAAA;AAAD,MAAY,4BAAlB;AAEA,QAAMC,GAAG,GAAG,wBACPC,GADO;AAEJ;;;;AAIA,uCAAwBF,OAAxB,CANI;AAQR;;;;AARQ,GAYPE,GAZO,EAYH,MAAM,0DAA0BL,cAA1B,CAZH;AAaR;;;;AAbQ,GAiBPM,GAjBO,CAiBH,SAjBG,EAiBQ,kCAAa,0CAAkBL,QAAlB,CAAb,CAjBR,CAAZ,CAJgB,CAuBhB;;AACA,QAAMM,cAA8B;AAChCC,IAAAA,IAAI,EAAE,6BAD0B;AAEhCC,IAAAA,MAAM,EAAE;AAFwB,KAG7BP,gBAH6B,CAApC;;AAKA,2BAAgCK,cAAhC,EAAgDH,GAAhD;AACH,CAhCM","sourcesContent":["// @flow\nimport express from \"express\";\nimport asyncHandler from \"express-async-handler\";\nimport {startGateway, getGatewayInfo} from \"../shared/index.js\";\nimport type {RenderGatewayOptions, Request, Response} from \"./types.js\";\nimport type {GatewayOptions} from \"../shared/index.js\";\nimport {\n    getRuntimeMode,\n    getLogger,\n    makeCommonServiceRouter,\n} from \"../ka-shared/index.js\";\nimport {makeCheckSecretMiddleware} from \"./middleware/make-check-secret-middleware.js\";\nimport {makeRenderHandler} from \"./handlers/make-render-handler.js\";\n\n/**\n * Run the render-gateway server using the provided options.\n *\n * @param {RenderGatewayOptions} options The options that define how the\n * render gateway will operate.\n * @returns {Promise<void>} The promise of working.\n */\nexport const runServer = async (\n    options: RenderGatewayOptions,\n): Promise<void> => {\n    const {authentication, renderFn, ...remainingOptions} = options;\n    const {version} = getGatewayInfo();\n\n    const app = express<Request, Response>()\n        .use(\n            /**\n             * This sets up the /_api/ route handlers that are used by the KA\n             * deployment system.\n             */\n            makeCommonServiceRouter(version),\n        )\n        /**\n         * This adds a check that requests below this point are coming from\n         * a known source.\n         */\n        .use(await makeCheckSecretMiddleware(authentication))\n        /**\n         * This is our render route. See the handler to learn how the magic\n         * happens.\n         */\n        .get(\"/render\", asyncHandler(makeRenderHandler(renderFn)));\n\n    // Start the gateway.\n    const gatewayOptions: GatewayOptions = {\n        mode: getRuntimeMode(),\n        logger: getLogger(),\n        ...remainingOptions,\n    };\n    startGateway<Request, Response>(gatewayOptions, app);\n};\n"],"file":"run-server.js"}