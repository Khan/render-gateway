{"version":3,"file":"run-server.js","names":["runServer","options","authentication","renderEnvironment","uncaughtRenderErrorHandler","defaultRenderErrorResponse","warmUpHandler","remainingOptions","version","getGatewayInfo","app","express","use","makeCommonServiceRouter","makeCheckSecretMiddleware","logRequestInfoMiddleware","get","asyncHandler","makeRenderHandler","set","runtimeMode","getRuntimeMode","logLevel","getLogLevel","gatewayOptions","mode","logger","createLogger","startGateway"],"sources":["../../src/gateway/run-server.js"],"sourcesContent":["// @flow\nimport express from \"express\";\nimport asyncHandler from \"express-async-handler\";\nimport {startGateway, getGatewayInfo, createLogger} from \"../shared/index.js\";\nimport type {RenderGatewayOptions, Request, Response} from \"./types.js\";\nimport type {GatewayOptions} from \"../shared/index.js\";\nimport {\n    getRuntimeMode,\n    makeCommonServiceRouter,\n    getLogLevel,\n} from \"../ka-shared/index.js\";\nimport {makeCheckSecretMiddleware} from \"./middleware/make-check-secret-middleware.js\";\nimport {logRequestInfoMiddleware} from \"./middleware/log-request-info-middleware.js\";\nimport {makeRenderHandler} from \"./handlers/make-render-handler.js\";\n\n/**\n * Run the render-gateway server using the provided options.\n *\n * @param {RenderGatewayOptions} options The options that define how the\n * render gateway will operate.\n * @returns {Promise<void>} The promise of working.\n */\nexport const runServer = async (\n    options: RenderGatewayOptions,\n): Promise<void> => {\n    const {\n        authentication,\n        renderEnvironment,\n        uncaughtRenderErrorHandler,\n        defaultRenderErrorResponse,\n        warmUpHandler,\n        ...remainingOptions\n    } = options;\n    const {version} = getGatewayInfo();\n\n    const app = express<Request, Response>()\n        /**\n         * This sets up the /_api/ route handlers that are used by the KA\n         * deployment system. Has to go before we check secrets.\n         */\n        .use(makeCommonServiceRouter(version, warmUpHandler))\n        /**\n         * This adds a check that requests below this point are coming from\n         * a known source.\n         */\n        .use(await makeCheckSecretMiddleware(authentication))\n        /**\n         * After the secret check, we log info about the request. Since this\n         * is logging, it MUST go after the secret check or we might leak a\n         * secret, and we don't want that.\n         */\n        .use(logRequestInfoMiddleware)\n        /**\n         * This is our render route. See the handler to learn how the magic\n         * happens.\n         */\n        .get(\n            \"/_render\",\n            asyncHandler(\n                makeRenderHandler(\n                    renderEnvironment,\n                    uncaughtRenderErrorHandler,\n                    defaultRenderErrorResponse,\n                ),\n            ),\n        );\n\n    /**\n     * Added this to support forwarding proxies in case we need it, per the\n     * documentation:\n     *\n     * https://cloud.google.com/appengine/docs/standard/nodejs/runtime#https_and_forwarding_proxies\n     */\n    app.set(\"trust proxy\", true);\n\n    // Start the gateway.\n    const runtimeMode = getRuntimeMode();\n    const logLevel = getLogLevel();\n    const gatewayOptions: GatewayOptions = {\n        mode: runtimeMode,\n        logger: createLogger(runtimeMode, logLevel),\n        ...remainingOptions,\n    };\n    await startGateway<Request, Response>(gatewayOptions, app);\n};\n"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAGA;;AAKA;;AACA;;AACA;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,SAAS,GAAG,MACrBC,OADqB,IAEL;EAChB,MAAM;IACFC,cADE;IAEFC,iBAFE;IAGFC,0BAHE;IAIFC,0BAJE;IAKFC;EALE,IAOFL,OAPJ;EAAA,MAMOM,gBANP,4BAOIN,OAPJ;;EAQA,MAAM;IAACO;EAAD,IAAY,IAAAC,qBAAA,GAAlB;EAEA,MAAMC,GAAG,GAAG,IAAAC,gBAAA;EACR;AACR;AACA;AACA;EAJgB,CAKPC,GALO,CAKH,IAAAC,+BAAA,EAAwBL,OAAxB,EAAiCF,aAAjC,CALG;EAMR;AACR;AACA;AACA;EATgB,CAUPM,GAVO,CAUH,MAAM,IAAAE,oDAAA,EAA0BZ,cAA1B,CAVH;EAWR;AACR;AACA;AACA;AACA;EAfgB,CAgBPU,GAhBO,CAgBHG,kDAhBG;EAiBR;AACR;AACA;AACA;EApBgB,CAqBPC,GArBO,CAsBJ,UAtBI,EAuBJ,IAAAC,4BAAA,EACI,IAAAC,oCAAA,EACIf,iBADJ,EAEIC,0BAFJ,EAGIC,0BAHJ,CADJ,CAvBI,CAAZ;EAgCA;AACJ;AACA;AACA;AACA;AACA;;EACIK,GAAG,CAACS,GAAJ,CAAQ,aAAR,EAAuB,IAAvB,EAjDgB,CAmDhB;;EACA,MAAMC,WAAW,GAAG,IAAAC,sBAAA,GAApB;EACA,MAAMC,QAAQ,GAAG,IAAAC,mBAAA,GAAjB;;EACA,MAAMC,cAA8B;IAChCC,IAAI,EAAEL,WAD0B;IAEhCM,MAAM,EAAE,IAAAC,mBAAA,EAAaP,WAAb,EAA0BE,QAA1B;EAFwB,GAG7Bf,gBAH6B,CAApC;;EAKA,MAAM,IAAAqB,mBAAA,EAAgCJ,cAAhC,EAAgDd,GAAhD,CAAN;AACH,CA9DM"}