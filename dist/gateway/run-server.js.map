{"version":3,"sources":["../../src/gateway/run-server.js"],"names":["runServer","options","authentication","renderEnvironment","uncaughtRenderErrorHandler","remainingOptions","version","app","use","get","set","gatewayOptions","mode","logger"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AAGA;;AAKA;;AACA;;;;;;;;;;;;;;AAEA;;;;;;;AAOO,MAAMA,SAAS,GAAG,MACrBC,OADqB,IAEL;AAChB,QAAM;AACFC,IAAAA,cADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA;AAHE,MAKFH,OALJ;AAAA,QAIOI,gBAJP,4BAKIJ,OALJ;;AAMA,QAAM;AAACK,IAAAA;AAAD,MAAY,4BAAlB;AAEA,QAAMC,GAAG,GAAG,wBACPC,GADO;AAEJ;;;;AAIA,uCAAwBF,OAAxB,CANI;AAQR;;;;AARQ,GAYPE,GAZO,CAYH,MAAM,0DAA0BN,cAA1B,CAZH;AAaR;;;;AAbQ,GAiBPO,GAjBO,CAkBJ,SAlBI,EAmBJ,kCACI,0CACIN,iBADJ,EAEIC,0BAFJ,CADJ,CAnBI,CAAZ;AA2BA;;;;;;;AAMAG,EAAAA,GAAG,CAACG,GAAJ,CAAQ,aAAR,EAAuB,IAAvB,EA1CgB,CA4ChB;;AACA,QAAMC,cAA8B;AAChCC,IAAAA,IAAI,EAAE,6BAD0B;AAEhCC,IAAAA,MAAM,EAAE;AAFwB,KAG7BR,gBAH6B,CAApC;;AAKA,2BAAgCM,cAAhC,EAAgDJ,GAAhD;AACH,CArDM","sourcesContent":["// @flow\nimport express from \"express\";\nimport asyncHandler from \"express-async-handler\";\nimport {startGateway, getGatewayInfo} from \"../shared/index.js\";\nimport type {RenderGatewayOptions, Request, Response} from \"./types.js\";\nimport type {GatewayOptions} from \"../shared/index.js\";\nimport {\n    getRuntimeMode,\n    getLogger,\n    makeCommonServiceRouter,\n} from \"../ka-shared/index.js\";\nimport {makeCheckSecretMiddleware} from \"./middleware/make-check-secret-middleware.js\";\nimport {makeRenderHandler} from \"./handlers/make-render-handler.js\";\n\n/**\n * Run the render-gateway server using the provided options.\n *\n * @param {RenderGatewayOptions} options The options that define how the\n * render gateway will operate.\n * @returns {Promise<void>} The promise of working.\n */\nexport const runServer = async (\n    options: RenderGatewayOptions,\n): Promise<void> => {\n    const {\n        authentication,\n        renderEnvironment,\n        uncaughtRenderErrorHandler,\n        ...remainingOptions\n    } = options;\n    const {version} = getGatewayInfo();\n\n    const app = express<Request, Response>()\n        .use(\n            /**\n             * This sets up the /_api/ route handlers that are used by the KA\n             * deployment system.\n             */\n            makeCommonServiceRouter(version),\n        )\n        /**\n         * This adds a check that requests below this point are coming from\n         * a known source.\n         */\n        .use(await makeCheckSecretMiddleware(authentication))\n        /**\n         * This is our render route. See the handler to learn how the magic\n         * happens.\n         */\n        .get(\n            \"/render\",\n            asyncHandler(\n                makeRenderHandler(\n                    renderEnvironment,\n                    uncaughtRenderErrorHandler,\n                ),\n            ),\n        );\n\n    /**\n     * Added this to support forwarding proxies in case we need it, per the\n     * documentation:\n     *\n     * https://cloud.google.com/appengine/docs/standard/nodejs/runtime#https_and_forwarding_proxies\n     */\n    app.set(\"trust proxy\", true);\n\n    // Start the gateway.\n    const gatewayOptions: GatewayOptions = {\n        mode: getRuntimeMode(),\n        logger: getLogger(),\n        ...remainingOptions,\n    };\n    startGateway<Request, Response>(gatewayOptions, app);\n};\n"],"file":"run-server.js"}