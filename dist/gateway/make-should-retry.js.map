{"version":3,"file":"make-should-retry.js","names":["_index","require","makeShouldRetry","logger","override","err","res","silly","extractError","code","status","exports"],"sources":["../../src/gateway/make-should-retry.js"],"sourcesContent":["// @flow\nimport type {Response as SuperAgentResponse, CallbackHandler} from \"superagent\";\nimport type {Logger, AmbiguousError} from \"../shared/index.js\";\nimport {extractError} from \"../shared/index.js\";\n\n/**\n * Create a shouldRetry callback for use with superagent's retry() method.\n *\n * @param {Logger} logger The logger that will record the retry.\n * @param {CallbackHandler} [override] A callback that might override the\n * default behavior.\n * @returns {CallbackHandler} A superagent callback handler to use with the\n * retry() function.\n */\nexport const makeShouldRetry = (\n    logger: Logger,\n    override: ?CallbackHandler,\n): CallbackHandler => {\n    return (err: ?AmbiguousError, res: ?SuperAgentResponse): ?boolean => {\n        /**\n         * This method gets called even on successful responses; I presume in\n         * case something about the response requires retrying. So, let's not\n         * log that the request failed if we don't have an error object.\n         */\n        if (err != null) {\n            // We log at the lowest level as usually we don't care about this\n            // as long as we ultimately succeed.\n            logger.silly(\"Request failed. Might retry.\", {\n                ...extractError(err),\n                code: (err: any).code,\n                status: res?.status,\n            });\n        }\n\n        /**\n         * According to https://github.com/visionmedia/superagent/blob/0de12b299d5d5b5ec05cc43e18e853a95bffb25a/src/request-base.js#L181-L206\n         *\n         * Returning a non-boolean value causes superagent to do its default\n         * behavior, which is:\n         * - allow retry for all 500 errors except 501\n         * - allow retry for err.code set to any:\n         *      ['ECONNRESET', 'ETIMEDOUT', 'EADDRINFO', 'ESOCKETTIMEDOUT']\n         * - allow retry if err.timeout is truthy and err.code is 'ECONNABORTED`\n         * - allow retry if err.crossDomain is truthy\n         */\n        return override?.(err, res);\n    };\n};\n"],"mappings":";;;;;;AAGA,IAAAA,MAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,eAAe,GAAGA,CAC3BC,MAAc,EACdC,QAA0B,KACR;EAClB,OAAO,CAACC,GAAoB,EAAEC,GAAwB,KAAe;IACjE;AACR;AACA;AACA;AACA;IACQ,IAAID,GAAG,IAAI,IAAI,EAAE;MACb;MACA;MACAF,MAAM,CAACI,KAAK,CAAC,8BAA8B,EAAE;QACzC,GAAG,IAAAC,mBAAY,EAACH,GAAG,CAAC;QACpBI,IAAI,EAAGJ,GAAG,CAAOI,IAAI;QACrBC,MAAM,EAAEJ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEI;MACjB,CAAC,CAAC;IACN;;IAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,OAAON,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGC,GAAG,EAAEC,GAAG,CAAC;EAC/B,CAAC;AACL,CAAC;AAACK,OAAA,CAAAT,eAAA,GAAAA,eAAA"}