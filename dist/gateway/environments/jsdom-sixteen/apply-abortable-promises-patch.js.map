{"version":3,"sources":["../../../../src/gateway/environments/jsdom-sixteen/apply-abortable-promises-patch.js"],"names":["patchedMarker","applyAbortablePromisesPatch","force","Promise","prototype","abort","ourAbort"],"mappings":";;;;;;AACA,MAAMA,aAAa,GAAG,aAAtB;AAEA;;;;;;;;;;;;;AAYO,MAAMC,2BAA2B,GAAG,CAACC,KAAe,GAAG,KAAnB,KAAmC;AAC1E;;;;AAIA,MACI,CAACA,KAAD,IACA;AACAC,EAAAA,OAAO,CAACC,SAAR,CAAkBC,KAFlB,IAGA;AACAF,EAAAA,OAAO,CAACC,SAAR,CAAkBC,KAAlB,CAAwBL,aAAxB,CALJ,EAME;AACE;AACH,GAbyE,CAe1E;;;AACA,SAAOG,OAAO,CAACC,SAAR,CAAkBC,KAAzB;AAEA;;;;;AAIA,QAAMC,QAAQ,GAAG,MAAM,CAAE,CAAzB;;AACAA,EAAAA,QAAQ,CAACN,aAAD,CAAR,GAA0B,IAA1B;AAEA;;;;;AAIAG,EAAAA,OAAO,CAACC,SAAR,CAAkBC,KAAlB,GAA0BC,QAA1B;AACH,CA9BM","sourcesContent":["// @flow\nconst patchedMarker = \"__patched__\";\n\n/**\n * JSDOM assumes that all fetchs are abortable. However, this is not always\n * the case, due to how some can be regular promises.\n *\n * Though we try to mitigate this in our various request implementations, this\n * is our last chance catch all that ensures the promise prototype has an abort\n * call.\n *\n * By making sure this exists, JSDOM does not throw when closing down an\n * instance and we can guarantee that all truly abortable requests are actually\n * aborted.\n */\nexport const applyAbortablePromisesPatch = (force?: boolean = false): void => {\n    /**\n     * We know that this doesn't exist on the promise type, but it does if\n     * we already patched it.\n     */\n    if (\n        !force &&\n        // $FlowIgnore[prop-missing]\n        Promise.prototype.abort &&\n        // $FlowIgnore[incompatible-use]\n        Promise.prototype.abort[patchedMarker]\n    ) {\n        return;\n    }\n\n    // $FlowIgnore[prop-missing]\n    delete Promise.prototype.abort;\n\n    /**\n     * Make a noop and tag it as our patched version (that way we prevent\n     * patching more than once).\n     */\n    const ourAbort = () => {};\n    ourAbort[patchedMarker] = true;\n\n    /**\n     * $FlowIgnore[prop-missing]\n     * We still know that this doesn't exist on the promise type.\n     */\n    Promise.prototype.abort = ourAbort;\n};\n"],"file":"apply-abortable-promises-patch.js"}