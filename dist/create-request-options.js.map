{"version":3,"sources":["../src/create-request-options.js"],"names":["createRequestOptions","requestsOptions","defaultRequestOptions","buffer","retries","timeout","keepAlive","caching","shouldRetry","agent","cachePlugin","provider","requestOptions","getExpiration","isCacheable"],"mappings":";;;;;;;AACA;;AAEA;;;;AAEA;;;;;;;;;;AAUO,MAAMA,oBAAoB,GAC7BC,eADgC,IAEf;AACjB,QAAMC,qBAAqB,GAAG;AAC1BC,IAAAA,MAAM,EAAE,IADkB;AAE1BC,IAAAA,OAAO,EAAE,CAFiB;AAG1BC,IAAAA,OAAO,EAAE;AAHiB,GAA9B;AAMA,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBH,IAAAA,OAArB;AAA8BI,IAAAA,WAA9B;AAA2CH,IAAAA;AAA3C,MACFJ,eAAe,IAAI,EADvB;AAGA,QAAMQ,KAAK,GAAG,0BAAUH,SAAV,CAAd;AACA,QAAMI,WAAW,GACbH,OAAO,IAAI,IAAX,GAAkB,IAAlB,GAAyB,oCAAsBA,OAAO,CAACI,QAA9B,CAD7B;AAGA,QAAMC,cAA8B,GAAG;AACnCH,IAAAA,KADmC;AAEnCN,IAAAA,MAAM,EAAED,qBAAqB,CAACC,MAFK;AAGnCO,IAAAA,WAHmC;AAInCN,IAAAA,OAAO,EAAEA,OAAO,IAAIF,qBAAqB,CAACE,OAJP;AAKnCI,IAAAA,WALmC;AAMnCH,IAAAA,OAAO,EAAEA,OAAO,IAAIH,qBAAqB,CAACG,OANP;AAOnCQ,IAAAA,aAAa,EAAEN,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEM,aAPW;AAQnCC,IAAAA,WAAW,EAAEP,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEO;AARa,GAAvC;AAWA,SAAOF,cAAP;AACH,CA5BM","sourcesContent":["// @flow\nimport superagentCachePlugin from \"superagent-cache-plugin\";\nimport type {RequestsOptions, RequestOptions} from \"./types.js\";\nimport {makeAgent} from \"./make-agent.js\";\n\n/**\n * Creates request options from the gateway's requests options.\n *\n * This will create the HTTP agent and superagent-cache-plugin instances for\n * sharing across all requests.\n *\n * Callers should invoke this once and use the result as the basis for any\n * request options they build so that the agent and cache are shared\n * appropriately.\n */\nexport const createRequestOptions = (\n    requestsOptions: ?RequestsOptions,\n): RequestOptions => {\n    const defaultRequestOptions = {\n        buffer: true,\n        retries: 2,\n        timeout: 60000,\n    };\n\n    const {keepAlive, caching, retries, shouldRetry, timeout} =\n        requestsOptions || {};\n\n    const agent = makeAgent(keepAlive);\n    const cachePlugin =\n        caching == null ? null : superagentCachePlugin(caching.provider);\n\n    const requestOptions: RequestOptions = {\n        agent,\n        buffer: defaultRequestOptions.buffer,\n        cachePlugin,\n        retries: retries || defaultRequestOptions.retries,\n        shouldRetry,\n        timeout: timeout || defaultRequestOptions.timeout,\n        getExpiration: caching?.getExpiration,\n        isCacheable: caching?.isCacheable,\n    };\n\n    return requestOptions;\n};\n"],"file":"create-request-options.js"}