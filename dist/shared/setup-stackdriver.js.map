{"version":3,"sources":["../../src/shared/setup-stackdriver.js"],"names":["setupStackdriver","mode","options","debugAgent","start","allowExpressions","profiler"],"mappings":";;;;;;;;;;;AAGA;;;AAGO,MAAMA,gBAAgB,GAAG,OAC5BC,IAD4B,EAE5BC,OAF4B,KAGZ;AAChB,MAAID,IAAI,KAAK,YAAb,EAA2B;AACvB;AACH;;AAED,MAAIC,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEC,UAAb,EAAyB;AACrB,UAAMA,UAAU,GAAG,mEAAa,2BAAb,GAAnB;AACAA,IAAAA,UAAU,CAACC,KAAX,CAAiB;AAACC,MAAAA,gBAAgB,EAAE;AAAnB,KAAjB;AACH;;AAED,MAAIH,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEI,QAAb,EAAuB;AACnB,UAAMA,QAAQ,GAAG,mEAAa,wBAAb,GAAjB;AACAA,IAAAA,QAAQ,CAACF,KAAT;AACH;AACJ,CAjBM","sourcesContent":["// @flow\nimport type {Runtime, CloudOptions} from \"./types.js\";\n\n/**\n * Setup stackdriver integrations.\n */\nexport const setupStackdriver = async (\n    mode: Runtime,\n    options: ?CloudOptions,\n): Promise<void> => {\n    if (mode !== \"production\") {\n        return;\n    }\n\n    if (options?.debugAgent) {\n        const debugAgent = await import(\"@google-cloud/debug-agent\");\n        debugAgent.start({allowExpressions: true});\n    }\n\n    if (options?.profiler) {\n        const profiler = await import(\"@google-cloud/profiler\");\n        profiler.start();\n    }\n};\n"],"file":"setup-stackdriver.js"}