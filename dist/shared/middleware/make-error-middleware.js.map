{"version":3,"sources":["../../../src/shared/middleware/make-error-middleware.js"],"names":["makeErrorMiddleware","logger","expressWinston","errorLogger","level","winstonInstance"],"mappings":";;;;;;;AACA;;;;AAKA;;;AAGO,MAAMA,mBAAmB,GAC5BC,MAD+B;AAG/B;;;AAGAC,wBAAeC,WAAf,CAA2B;AACvBC,EAAAA,KAAK,EAAE,OADgB;AAEvBC,EAAAA,eAAe,EAAEJ;AAFM,CAA3B,CANG","sourcesContent":["// @flow\nimport expressWinston from \"express-winston\";\n\nimport type {Middleware, $Request, $Response} from \"express\";\nimport type {Logger} from \"../types.js\";\n\n/**\n * Create middleware for reporting errors.\n */\nexport const makeErrorMiddleware = <TReq: $Request, TRes: $Response>(\n    logger: Logger,\n): Middleware<TReq, TRes> =>\n    /**\n     * Express-winston types aren't parameterized, so we suppress the error.\n     */\n    expressWinston.errorLogger({\n        level: \"error\",\n        winstonInstance: logger,\n    });\n"],"file":"make-error-middleware.js"}