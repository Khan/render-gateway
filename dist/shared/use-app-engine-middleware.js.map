{"version":3,"file":"use-app-engine-middleware.js","names":["useAppEngineMiddleware","app","mode","logger","express","use","makeRequestMiddleware","makeAppEngineRequestIDMiddleware","makeErrorMiddleware"],"sources":["../../src/shared/use-app-engine-middleware.js"],"sourcesContent":["// @flow\nimport express from \"express\";\nimport type {$Application, $Request, $Response} from \"express\";\nimport {makeErrorMiddleware} from \"./middleware/make-error-middleware.js\";\nimport {makeRequestMiddleware} from \"./middleware/make-request-middleware.js\";\nimport {makeAppEngineRequestIDMiddleware} from \"./middleware/make-app-engine-request-id-middleware.js\";\n\nimport type {Logger, Runtime} from \"./types.js\";\n\n/**\n * Apply the middleware that we want to use with Google App Engine (GAE).\n */\nexport async function useAppEngineMiddleware<TReq: $Request, TRes: $Response>(\n    app: $Application<TReq, TRes>,\n    mode: Runtime,\n    logger: Logger,\n): Promise<$Application<TReq, TRes>> {\n    return (\n        express<TReq, TRes>()\n            // Add the request logging middleware.\n            .use(await makeRequestMiddleware(mode, logger))\n            // Add requestID middleware\n            .use(makeAppEngineRequestIDMiddleware(logger))\n            // Add the app.\n            .use(app)\n            // Add the error logging middleware.\n            .use(makeErrorMiddleware(logger))\n    );\n}\n"],"mappings":";;;;;;AACA;AAEA;AACA;AACA;AAAuG;AAIvG;AACA;AACA;AACO,eAAeA,sBAAsB,CACxCC,GAA6B,EAC7BC,IAAa,EACbC,MAAc,EACmB;EACjC,OACI,IAAAC,gBAAO;EACH;EAAA,CACCC,GAAG,CAAC,MAAM,IAAAC,4CAAqB,EAACJ,IAAI,EAAEC,MAAM,CAAC;EAC9C;EAAA,CACCE,GAAG,CAAC,IAAAE,kEAAgC,EAACJ,MAAM,CAAC;EAC7C;EAAA,CACCE,GAAG,CAACJ,GAAG;EACR;EAAA,CACCI,GAAG,CAAC,IAAAG,wCAAmB,EAACL,MAAM,CAAC,CAAC;AAE7C"}