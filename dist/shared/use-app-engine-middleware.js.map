{"version":3,"sources":["../../src/shared/use-app-engine-middleware.js"],"names":["useAppEngineMiddleware","app","mode","logger","use"],"mappings":";;;;;;;AACA;;AAEA;;AACA;;AACA;;;;AAIA;;;AAGO,eAAeA,sBAAf,CACHC,GADG,EAEHC,IAFG,EAGHC,MAHG,EAI8B;AACjC,SACI,wBACI;AADJ,GAEKC,GAFL,EAES,MAAM,kDAAsBF,IAAtB,EAA4BC,MAA5B,CAFf,GAGI;AAHJ,GAIKC,GAJL,CAIS,wEAAiCD,MAAjC,CAJT,EAKI;AALJ,GAMKC,GANL,CAMSH,GANT,EAOI;AAPJ,GAQKG,GARL,CAQS,8CAAoBD,MAApB,CART,CADJ;AAWH","sourcesContent":["// @flow\nimport express from \"express\";\nimport type {$Application, $Request, $Response} from \"express\";\nimport {makeErrorMiddleware} from \"./make-error-middleware.js\";\nimport {makeRequestMiddleware} from \"./make-request-middleware.js\";\nimport {makeAppEngineRequestIDMiddleware} from \"./make-app-engine-request-id-middleware.js\";\n\nimport type {Logger, Runtime} from \"./types.js\";\n\n/**\n * Apply the middleware that we want to use with Google App Engine (GAE).\n */\nexport async function useAppEngineMiddleware<TReq: $Request, TRes: $Response>(\n    app: $Application<TReq, TRes>,\n    mode: Runtime,\n    logger: Logger,\n): Promise<$Application<TReq, TRes>> {\n    return (\n        express<TReq, TRes>()\n            // Add the request logging middleware.\n            .use(await makeRequestMiddleware(mode, logger))\n            // Add requestID middleware\n            .use(makeAppEngineRequestIDMiddleware(logger))\n            // Add the app.\n            .use(app)\n            // Add the error logging middleware.\n            .use(makeErrorMiddleware(logger))\n    );\n}\n"],"file":"use-app-engine-middleware.js"}