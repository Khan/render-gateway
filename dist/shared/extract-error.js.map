{"version":3,"sources":["../../src/shared/extract-error.js"],"names":["extractError","error","response","stack","errorString","toString"],"mappings":";;;;;;;AAGA;;;;;;;;;AASO,SAASA,YAAT,CAAsBC,KAAtB,EAA8D;AACjE,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,WAAO;AAACA,MAAAA;AAAD,KAAP;AACH;;AAED,MAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeD,KAArC,EAA4C;AACxC,WAAO;AACHA,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeD,KADnB;AAEHE,MAAAA,KAAK,EAAEF,KAAK,CAACE;AAFV,KAAP;AAIH;;AAED,MAAIF,KAAK,CAACA,KAAN,IAAeA,KAAK,KAAKA,KAAK,CAACA,KAAnC,EAA0C;AACtC,WAAOD,YAAY,CAACC,KAAK,CAACA,KAAP,CAAnB;AACH;;AAED,QAAMG,WAAW,GAAGH,KAAK,CAACI,QAAN,EAApB;AACA,SAAO;AACH;;;;AAIAJ,IAAAA,KAAK,EAAEG,WAAW,KAAK,iBAAhB,GAAoCH,KAAK,CAACE,KAA1C,GAAkDC,WALtD;AAMHD,IAAAA,KAAK,EAAEF,KAAK,CAACE;AANV,GAAP;AAQH","sourcesContent":["// @flow\nimport type {AmbiguousError, SimplifiedError} from \"./types.js\";\n\n/**\n * Extract the root cause error from an ambiguous error.\n *\n * This takes an ambiguous error representation and attempts to turn it into\n * a less ambiguous version.\n *\n * @param {AmbiguousError} error An object or string that represents an error.\n * @returns {SimplifiedError} A simplified error object.\n */\nexport function extractError(error: AmbiguousError): SimplifiedError {\n    if (typeof error === \"string\") {\n        return {error};\n    }\n\n    if (error.response && error.response.error) {\n        return {\n            error: error.response.error,\n            stack: error.stack,\n        };\n    }\n\n    if (error.error && error !== error.error) {\n        return extractError(error.error);\n    }\n\n    const errorString = error.toString();\n    return {\n        /**\n         * If the toString just gave us the generic object response, let's\n         * set it to the stack.\n         */\n        error: errorString === \"[object Object]\" ? error.stack : errorString,\n        stack: error.stack,\n    };\n}\n"],"file":"extract-error.js"}