{"version":3,"file":"trace.js","names":["traceAgent","_interopRequireWildcard","require","_getLogger","_traceImpl","_safeHasOwnProperty","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","trace","action","message","requestOrLogger","tracer","safeHasOwnProperty","logger","getLogger","traceImpl","exports"],"sources":["../../src/shared/trace.js"],"sourcesContent":["// @flow\nimport * as traceAgent from \"@google-cloud/trace-agent\";\nimport type {$Request} from \"express\";\nimport {getLogger} from \"./get-logger.js\";\nimport {traceImpl} from \"./trace-impl.js\";\nimport {safeHasOwnProperty} from \"./safe-has-own-property.js\";\n\nimport type {Logger, RequestWithLog, ITraceSession} from \"./types.js\";\n\ninterface ITrace {\n    /**\n     * Start tracing an event.\n     *\n     * This will log the start of a trace and open a trace session, which is\n     * returned. Use the returned session to end the trace when the traced event is\n     * over. The traced event will be logged and also written to the Google Cloud\n     * StackDriver Trace agent.\n     *\n     * Note that if startTraceAgent was never called, this will still log but the\n     * StackDriver trace span creation will not actually happen.\n     *\n     * @param {string} action The name of the action being traced.\n     * @param {string} message A message to be logged along side the action\n     * @param {TReq: RequestWithLog<$Request>} [request] The request being\n     * fulfilled. This is used to determine if a request-scoped logger can be used.\n     * @returns {ITraceSession} The new trace session that was created and is to be\n     * used to end the session.\n     */\n    <TReq: RequestWithLog<$Request>>(\n        action: string,\n        message: string,\n        request?: TReq,\n    ): ITraceSession;\n\n    /**\n     * Start tracing an event.\n     *\n     * This will log the start of a trace and open a trace session, which is\n     * returned. Use the returned session to end the trace when the traced event is\n     * over. The traced event will be logged and also written to the Google Cloud\n     * StackDriver Trace agent.\n     *\n     * Note that if startTraceAgent was never called, this will still log but the\n     * StackDriver trace span creation will not actually happen.\n     *\n     * @param {string} action The name of the action being traced.\n     * @param {string} message A message to be logged along side the action\n     * @param {Logger} logger The logger to be used for the trace.\n     * @returns {ITraceSession} The new trace session that was created and is to be\n     * used to end the session.\n     */\n    (action: string, message: string, logger: Logger): ITraceSession;\n}\n\nexport const trace: ITrace = (\n    action: string,\n    message: string,\n    requestOrLogger: any,\n): ITraceSession => {\n    const tracer = traceAgent.get();\n    if (requestOrLogger == null || safeHasOwnProperty(requestOrLogger, \"url\")) {\n        const logger = getLogger(requestOrLogger);\n        return traceImpl(logger, action, message, tracer);\n    }\n    return traceImpl(requestOrLogger, action, message, tracer);\n};\n"],"mappings":";;;;;;AACA,IAAAA,UAAA,GAAAC,uBAAA,CAAAC,OAAA;AAEA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;AACA,IAAAG,mBAAA,GAAAH,OAAA;AAA8D,SAAAI,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAN,wBAAAU,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAiDvD,MAAMW,KAAa,GAAGA,CACzBC,MAAc,EACdC,OAAe,EACfC,eAAoB,KACJ;EAChB,MAAMC,MAAM,GAAGhC,UAAU,CAACgB,GAAG,EAAE;EAC/B,IAAIe,eAAe,IAAI,IAAI,IAAI,IAAAE,sCAAkB,EAACF,eAAe,EAAE,KAAK,CAAC,EAAE;IACvE,MAAMG,MAAM,GAAG,IAAAC,oBAAS,EAACJ,eAAe,CAAC;IACzC,OAAO,IAAAK,oBAAS,EAACF,MAAM,EAAEL,MAAM,EAAEC,OAAO,EAAEE,MAAM,CAAC;EACrD;EACA,OAAO,IAAAI,oBAAS,EAACL,eAAe,EAAEF,MAAM,EAAEC,OAAO,EAAEE,MAAM,CAAC;AAC9D,CAAC;AAACK,OAAA,CAAAT,KAAA,GAAAA,KAAA"}