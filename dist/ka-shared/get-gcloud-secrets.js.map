{"version":3,"sources":["../../src/ka-shared/get-gcloud-secrets.js"],"names":["readFile","fs","secretsForDev","serviceRootPath","lookupFn","configBuffer","path","join","secretsConfig","JSON","parse","secrets","Object","keys","forEach","name","secret","Error","secretsForProd","cryptoKeyPath","client","kms","KeyManagementServiceClient","contentsBuffer","ciphertext","toString","result","decrypt","Buffer","from","plaintext","getGCloudSecrets","config"],"mappings":";;;;;;;AAIA;;AACA;;AACA;;AACA;;;;AANA;;;AAUA,MAAMA,QAAQ,GAAG,qBAAUC,YAAGD,QAAb,CAAjB;AAEA;;;;;;;AAMA,MAAME,aAAa,GAAG,OAClBC,eADkB,EAElBC,QAFkB,KAGC;AACnB;AACA;AACA;AACA,QAAMC,YAAY,GAAG,MAAML,QAAQ,CAC/BM,cAAKC,IAAL,CAAUJ,eAAV,EAA2B,qBAA3B,CAD+B,CAAnC;AAGA,QAAMK,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWL,YAAX,CAAtB;AAEA,QAAMM,OAAgB,GAAG,EAAzB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,aAAZ,EAA2BM,OAA3B,CAAoCC,IAAD,IAAU;AACzC,UAAMC,MAAM,GAAGZ,QAAQ,CAACW,IAAD,EAAOP,aAAa,CAACO,IAAD,CAApB,CAAvB;;AACA,QAAI,CAACC,MAAL,EAAa;AACT,YAAM,IAAIC,KAAJ,CAAW,yBAAwBF,IAAK,EAAxC,CAAN;AACH;;AACDJ,IAAAA,OAAO,CAACI,IAAD,CAAP,GAAgBC,MAAhB;AACH,GAND;AAQA,SAAOL,OAAP;AACH,CAtBD;AAwBA;;;;;;;;AAMA,MAAMO,cAAc,GAAG,MAAOC,aAAP,IAAmD;AACtE,QAAMC,MAAM,GAAG,IAAIC,aAAIC,0BAAR,EAAf;AACA,QAAMC,cAAc,GAAG,MAAMvB,QAAQ,CAAC,oBAAD,CAArC;AACA,QAAMwB,UAAU,GAAGD,cAAc,CAACE,QAAf,CAAwB,QAAxB,CAAnB;AACA,QAAM,CAACC,MAAD,IAAW,MAAMN,MAAM,CAACO,OAAP,CAAe;AAACZ,IAAAA,IAAI,EAAEI,aAAP;AAAsBK,IAAAA;AAAtB,GAAf,CAAvB;AACA,SAAOf,IAAI,CAACC,KAAL,CAAWkB,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACI,SAAnB,EAA8B,QAA9B,CAAX,CAAP;AACH,CAND;AAQA;;;;;AAGO,MAAMC,gBAAgB,GAAIC,MAAD,IAA6C;AACzE,MAAIA,MAAM,CAACb,aAAX,EAA0B;AACtB,WAAOD,cAAc,CAACc,MAAM,CAACb,aAAR,CAArB;AACH,GAFD,MAEO,IAAIa,MAAM,CAAC7B,eAAX,EAA4B;AAC/B,WAAOD,aAAa,CAAC8B,MAAM,CAAC7B,eAAR,EAAyB6B,MAAM,CAAC5B,QAAhC,CAApB;AACH;;AAED,QAAM,IAAIa,KAAJ,CAAU,2BAAV,CAAN;AACH,CARM","sourcesContent":["// @flow\n/**\n * Utilities for reading secrets from secrets files.\n */\nimport fs from \"fs\";\nimport path from \"path\";\nimport {promisify} from \"util\";\nimport kms from \"@google-cloud/kms\";\n\nimport type {SecretsConfig, Secrets, SecretString} from \"./types.js\";\n\nconst readFile = promisify(fs.readFile);\n\n/**\n * Look up secrets during development.\n *\n * This assumes a secrets-config.json file exists and then uses the given\n * lookupFn to map them to dev secrets.\n */\nconst secretsForDev = async (\n    serviceRootPath: string,\n    lookupFn: (name: string, config: string) => ?SecretString,\n): Promise<Secrets> => {\n    // NOTE(somewhatabstract): It's convenient to use require here since that\n    // already understands JSON, but that's harder to test. This way we get\n    // the same functionality but we can actually test it.\n    const configBuffer = await readFile(\n        path.join(serviceRootPath, \"secrets-config.json\"),\n    );\n    const secretsConfig = JSON.parse(configBuffer);\n\n    const secrets: Secrets = {};\n    Object.keys(secretsConfig).forEach((name) => {\n        const secret = lookupFn(name, secretsConfig[name]);\n        if (!secret) {\n            throw new Error(`Could not read secret ${name}`);\n        }\n        secrets[name] = secret;\n    });\n\n    return secrets;\n};\n\n/**\n * Look up secrets during production.\n *\n * This is based on\n * https://cloud.google.com/kms/docs/encrypt-decrypt#kms-howto-encrypt-nodejs\n */\nconst secretsForProd = async (cryptoKeyPath: string): Promise<Secrets> => {\n    const client = new kms.KeyManagementServiceClient();\n    const contentsBuffer = await readFile(\"./secrets.json.enc\");\n    const ciphertext = contentsBuffer.toString(\"base64\");\n    const [result] = await client.decrypt({name: cryptoKeyPath, ciphertext});\n    return JSON.parse(Buffer.from(result.plaintext, \"base64\"));\n};\n\n/**\n * Get secrets\n */\nexport const getGCloudSecrets = (config: SecretsConfig): Promise<Secrets> => {\n    if (config.cryptoKeyPath) {\n        return secretsForProd(config.cryptoKeyPath);\n    } else if (config.serviceRootPath) {\n        return secretsForDev(config.serviceRootPath, config.lookupFn);\n    }\n\n    throw new Error(\"Unsupported configuration\");\n};\n"],"file":"get-gcloud-secrets.js"}