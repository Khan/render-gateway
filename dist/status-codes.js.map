{"version":3,"sources":["../src/status-codes.js"],"names":["NotFoundImpl","code","notFound","OKImpl","ok","redirect","targetURL","isPermanent","Error"],"mappings":";;;;;;AAGA,MAAMA,YAA4B,GAAG;AACjC,MAAIC,IAAJ,GAAgB;AACZ,WAAO,GAAP;AACH;;AAHgC,CAArC;AAMA;;;;AAGO,MAAMC,QAAQ,GAAG,MAAsBF,YAAvC;;;AAEP,MAAMG,MAAgB,GAAG;AACrB,MAAIF,IAAJ,GAAgB;AACZ,WAAO,GAAP;AACH;;AAHoB,CAAzB;AAMA;;;;AAGO,MAAMG,EAAE,GAAG,MAAgBD,MAA3B;AAEP;;;;;;;;;;;;AAQO,MAAME,QAAQ,GAAG,CACpBC,SADoB,EAEpBC,WAAqB,GAAG,KAFJ,KAGH;AACjB,MAAI,CAACD,SAAL,EAAgB;AACZ,UAAM,IAAIE,KAAJ,CAAU,6CAAV,CAAN;AACH;;AAED,QAAMP,IAAI,GAAGM,WAAW,GAAG,GAAH,GAAS,GAAjC;AACA,SAAO;AACH,QAAIN,IAAJ,GAAsB;AAClB,aAAOA,IAAP;AACH,KAHE;;AAIH,QAAIK,SAAJ,GAAwB;AACpB,aAAOA,SAAP;AACH;;AANE,GAAP;AAQH,CAjBM","sourcesContent":["// @flow\nimport type {NotFoundStatus, OKStatus, RedirectStatus} from \"./types.js\";\n\nconst NotFoundImpl: NotFoundStatus = {\n    get code(): 404 {\n        return 404;\n    },\n};\n\n/**\n * Create a 404 NotFound status.\n */\nexport const notFound = (): NotFoundStatus => NotFoundImpl;\n\nconst OKImpl: OKStatus = {\n    get code(): 200 {\n        return 200;\n    },\n};\n\n/**\n * Create an 200 OK status.\n */\nexport const ok = (): OKStatus => OKImpl;\n\n/**\n * Create a Redirect status.\n *\n * @param {string} targetURL The target URL of the redirect.\n * @param {boolean} [isPermanent] If truthy, the status code 301 will be used to\n * indicate a permanent move of the redirected URL; otherwise, the status code\n * 302 will be used, indicating a temporary move. Defaults to false.\n */\nexport const redirect = (\n    targetURL: string,\n    isPermanent?: boolean = false,\n): RedirectStatus => {\n    if (!targetURL) {\n        throw new Error(\"Must provide a target URL for the redirect.\");\n    }\n\n    const code = isPermanent ? 301 : 302;\n    return {\n        get code(): 301 | 302 {\n            return code;\n        },\n        get targetURL(): string {\n            return targetURL;\n        },\n    };\n};\n"],"file":"status-codes.js"}